// <auto-generated />
using System;
using Entity.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Entity.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20251029212623_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Entity.Model.Form", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("active")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("delete_at")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("path")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Forms");
                });

            modelBuilder.Entity("Entity.Model.FormModule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("active")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("delete_at")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("form_id")
                        .HasColumnType("int");

                    b.Property<int>("module_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("form_id");

                    b.HasIndex("module_id");

                    b.ToTable("FormModules");
                });

            modelBuilder.Entity("Entity.Model.Module", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("active")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("delete_at")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Modules");
                });

            modelBuilder.Entity("Entity.Model.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("active")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("delete_at")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("type_permission")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Permissions");
                });

            modelBuilder.Entity("Entity.Model.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("active")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("delete_at")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("first_last_name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("first_name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("number_identification")
                        .HasColumnType("int");

                    b.Property<int>("phone_number")
                        .HasColumnType("int");

                    b.Property<string>("second_last_name")
                        .HasColumnType("longtext");

                    b.Property<string>("second_name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("Entity.Model.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("active")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("delete_at")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("type_rol")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Entity.Model.RolFormPermission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("active")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("delete_at")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("form_id")
                        .HasColumnType("int");

                    b.Property<int>("permission_id")
                        .HasColumnType("int");

                    b.Property<int>("rol_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("form_id");

                    b.HasIndex("permission_id");

                    b.HasIndex("rol_id");

                    b.ToTable("RolFormPermissions");
                });

            modelBuilder.Entity("Entity.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("active")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("delete_at")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("person_id")
                        .HasColumnType("int");

                    b.Property<int>("rol_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("person_id")
                        .IsUnique();

                    b.HasIndex("rol_id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Entity.Model.FormModule", b =>
                {
                    b.HasOne("Entity.Model.Form", "Form")
                        .WithMany("FormModule")
                        .HasForeignKey("form_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entity.Model.Module", "Module")
                        .WithMany("FormModule")
                        .HasForeignKey("module_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Form");

                    b.Navigation("Module");
                });

            modelBuilder.Entity("Entity.Model.RolFormPermission", b =>
                {
                    b.HasOne("Entity.Model.Form", "Form")
                        .WithMany("RolFormPermission")
                        .HasForeignKey("form_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entity.Model.Permission", "Permission")
                        .WithMany("RolFormPermission")
                        .HasForeignKey("permission_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entity.Model.Rol", "Rol")
                        .WithMany("RolFormPermission")
                        .HasForeignKey("rol_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Form");

                    b.Navigation("Permission");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("Entity.Model.User", b =>
                {
                    b.HasOne("Entity.Model.Person", "Person")
                        .WithOne("User")
                        .HasForeignKey("Entity.Model.User", "person_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entity.Model.Rol", "Rol")
                        .WithMany("User")
                        .HasForeignKey("rol_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("Entity.Model.Form", b =>
                {
                    b.Navigation("FormModule");

                    b.Navigation("RolFormPermission");
                });

            modelBuilder.Entity("Entity.Model.Module", b =>
                {
                    b.Navigation("FormModule");
                });

            modelBuilder.Entity("Entity.Model.Permission", b =>
                {
                    b.Navigation("RolFormPermission");
                });

            modelBuilder.Entity("Entity.Model.Person", b =>
                {
                    b.Navigation("User")
                        .IsRequired();
                });

            modelBuilder.Entity("Entity.Model.Rol", b =>
                {
                    b.Navigation("RolFormPermission");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
